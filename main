from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import LSTM, Dense
import numpy as np

def train_tf_lstm(data, seq_len=12, epochs=20, batch_size=32):
    # Prepare dataset
    x, y = [], []
    for i in range(len(data) - seq_len):
        x.append(data[i:i + seq_len])
        y.append(data[i + seq_len])
    x, y = np.array(x), np.array(y)
    
    # Build model
    model = Sequential([
        LSTM(64, activation='relu', input_shape=(seq_len, 1)),
        Dense(1)
    ])
    model.compile(optimizer='adam', loss='mse')
    
    # Train model
    model.fit(x, y, epochs=epochs, batch_size=batch_size)
    
    # Save model
    model.save('models/tensorflow_model.h5')
    print("Model saved to models/tensorflow_model.h5")



from sklearn.ensemble import RandomForestRegressor
import joblib

def train_random_forest(data, seq_len=12):
    # Prepare dataset
    x, y = [], []
    for i in range(len(data) - seq_len):
        x.append(data[i:i + seq_len])
        y.append(data[i + seq_len])
    
    # Train Random Forest
    model = RandomForestRegressor(n_estimators=100)
    model.fit(x, y)
    
    # Save model
    joblib.dump(model, 'models/random_forest_model.pkl')
    print("Model saved to models/random_forest_model.pkl")
